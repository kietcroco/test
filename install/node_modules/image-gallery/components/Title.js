"use strict";
import PropTypes from 'prop-types';
import React from 'react';
import { View, Text } from 'react-native';
import Button from './Button';

class Title extends React.Component {

	static displayName = "Title";

	static propTypes = {
		style: PropTypes.object,
		numberOfLines: PropTypes.number,
		titleStyle: PropTypes.object,
		paginationStyle: PropTypes.object,
		iconStyle: PropTypes.object,
		buttonStyle: PropTypes.object,
		currentPage: PropTypes.number,
		totalPage: PropTypes.number,
		pagination: PropTypes.bool,
		children: PropTypes.string,
		onClose: PropTypes.func,
		hitSlop: PropTypes.object
	};

	static defaultProps = {
		numberOfLines: 3,
		pagination: false,
		currentPage: 1,
		totalPage: 1,
		children: ""
	};

	shouldComponentUpdate( nextProps ) {
		
		return (
			this.props.currentPage !== nextProps.currentPage ||
			this.props.children !== nextProps.children ||
			this.props.totalPage !== nextProps.totalPage ||
			this.props.pagination !== nextProps.pagination ||
			this.props.numberOfLines !== nextProps.numberOfLines
		);
	}

	render() {

		const {
			style,
			numberOfLines,
			titleStyle,
			paginationStyle,
			iconStyle,
			children,
			pagination,
			currentPage,
			totalPage,
			onClose,
			hitSlop
		} = this.props;

		const buttonStyle = this.props.buttonStyle ? {
			..._styles.btnClose,
			...this.props.buttonStyle
		} : _styles.btnClose;

		return (
			<View style={[_styles.container, style]}  pointerEvents="box-none">
				<Text style={[_styles.title, titleStyle]} numberOfLines={ numberOfLines }>
					{
						pagination 
							&& <Text style={[_styles.pagination, paginationStyle]}>{ currentPage }/{ totalPage }</Text>
					}
					{
						pagination && 
							"\n"
					}
					{ children }
				</Text>
				{
					!!onClose && 
						<Button 
							style       = { buttonStyle }
							iconName    = "times"
							iconStyle   = { iconStyle }
							hitSlop 	= { hitSlop }
							onPress 	= { onClose }
						/>
				}
			</View>
		)
	}
}

const _styles = {
	container: {
		flexDirection: "row",
		backgroundColor: "rgba(0, 0, 0, 0.5)",
		padding: 10,
		position: "absolute",
		top: 0,
		left: 0,
		right: 0,
		alignItems: "center",
		justifyContent: "space-around"
	},
	title: {
		color: "white",
		fontSize: 16,
		flex: 1
	},
	pagination: {
		fontSize: 18,
		fontWeight: "bold",
		color: "white"
	},
	btnClose: {
		alignSelf: "flex-start",
		marginLeft: 10
	}
};

export default Title;