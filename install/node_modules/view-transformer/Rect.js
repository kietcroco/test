'use strict';

class Rect {

	constructor( props: Object = {} ) {
		this.set( props );
	}

	set({left, top, right, bottom, angle}) {
		this.left = left;
		this.top = top;
		this.right = right;
		this.bottom = bottom;
		this.angle = angle;
	}

	width() {
		return this.right - this.left;
	}

	height() {
		return this.bottom - this.top;
	}

	centerX() {
		return (this.left + this.right) / 2;
	}

	centerY() {
		return (this.top + this.bottom) / 2;
	}

	offset(dx, dy) {
		this.left += dx;
		this.right += dx;
		this.top += dy;
		this.bottom += dy;
		return this;
	}

	copy() {
		return new Rect({
			left: this.left, 
			top: this.top, 
			right: this.right, 
			bottom: this.bottom,
			angle: this.angle
		});
	}


	equals(rect: Rect) {
		return (
			this.left === rect.left && 
			this.top === rect.top && 
			this.right === rect.right && 
			this.bottom === rect.bottom &&
			this.angle === rect.angle
		);
	}

	isValid() {
		if (
			typeof this.left === 'number'
			&& typeof this.right === 'number'
			&& typeof this.top === 'number'
			&& typeof this.bottom === 'number'
			&& typeof this.angle === 'number'
		) {
			return true;
		}
		return false;
	}
}

export default Rect;